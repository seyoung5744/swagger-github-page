---
openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Schedule API
  description: 일정 API
- name: User API
  description: 회원 API
- name: Auth API
  description: 인증 API
- name: Comment API
  description: 댓글 API
paths:
  "/v1/schedules":
    get:
      tags:
      - Schedule API
      summary: 전체 일정 조회
      description: 전체 일정을 조회합니다.
      operationId: getAllSchedule
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: 전체 일정 조회 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponsePagingScheduleResponse"
    post:
      tags:
      - Schedule API
      summary: 일정 생성
      description: 새로운 일정을 등록합니다.
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateScheduleRequest"
        required: true
      responses:
        '201':
          description: 일정 생성 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseScheduleResponse"
  "/v1/schedules/{scheduleId}/comments":
    get:
      tags:
      - Comment API
      summary: 댓글 목록 조회
      description: 댓글 목록을 조회합니다.
      operationId: getAllComments
      parameters:
      - name: scheduleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 댓글 목록 조회 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseCommentListResponse"
    post:
      tags:
      - Comment API
      summary: 댓글 생성
      description: 일정에 댓글을 생성합니다.
      operationId: addComment
      parameters:
      - name: scheduleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateCommentRequest"
        required: true
      responses:
        '201':
          description: 댓글 생성 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseCommentResponse"
  "/v1/auth/sign-up":
    post:
      tags:
      - Auth API
      summary: 회원가입
      description: 회원 가입 절차에 따라 유저를 생성합니다
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignUpRequest"
        required: true
      responses:
        '201':
          description: 회원가입 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseAuthInfoResponse"
  "/v1/auth/login":
    post:
      tags:
      - Auth API
      summary: 로그인
      description: 로그인을 시도합니다.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginRequest"
        required: true
      responses:
        '200':
          description: 로그인 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseAuthInfoResponse"
  "/v1/users/{id}":
    get:
      tags:
      - User API
      summary: 회원 정보 조회
      description: 회원 정보를 조회합니다.
      operationId: getUserInfo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 회원 정보 조회 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseUserInfoResponse"
    delete:
      tags:
      - User API
      summary: 회원 삭제
      description: 회원을 삭제합니다.
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: 회원 삭제 성공 (No Content)
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseVoid"
    patch:
      tags:
      - User API
      summary: 회원 정보 수정
      description: 회원 정보를 수정합니다.
      operationId: editUserInfo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateUserInfoRequest"
        required: true
      responses:
        '200':
          description: 회원 정보 수정 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseUserInfoResponse"
  "/v1/schedules/{scheduleId}/comments/{id}":
    get:
      tags:
      - Comment API
      summary: 댓글 단건 조회
      description: 댓글 단건을 조회합니다.
      operationId: getComment
      parameters:
      - name: scheduleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 댓글 단건 조회 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseCommentResponse"
    delete:
      tags:
      - Comment API
      summary: 댓글 삭제
      description: 댓글을 삭제합니다.
      operationId: deleteComment
      parameters:
      - name: scheduleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 댓글 삭제 성공 (No Content)
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseVoid"
    patch:
      tags:
      - Comment API
      summary: 댓글 수정
      description: 댓글을 수정합니다.
      operationId: editComment
      parameters:
      - name: scheduleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EditCommentRequest"
        required: true
      responses:
        '200':
          description: 댓글 수정 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseCommentResponse"
  "/v1/schedules/{id}":
    get:
      tags:
      - Schedule API
      summary: 특정 일정 조회
      description: ID에 해당하는 일정을 조회합니다.
      operationId: getSchedule
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 일정 조회 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseScheduleResponse"
    delete:
      tags:
      - Schedule API
      summary: 일정 삭제
      description: ID에 해당하는 일정을 삭제합니다.
      operationId: deleteSchedule
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: 일정 삭제 성공 (No Content)
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseVoid"
    patch:
      tags:
      - Schedule API
      summary: 일정 수정
      description: ID에 해당하는 일정의 제목, 내용을 수정합니다.
      operationId: editScheduleTitleAndContents
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EditScheduleTitleAndContentsRequest"
        required: true
      responses:
        '200':
          description: 일정 수정 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseScheduleResponse"
  "/v1/users":
    get:
      tags:
      - User API
      summary: 회원 목록 조회
      description: 회원 목록을 조회합니다.
      operationId: getAllUsers
      responses:
        '200':
          description: 회원 목록 조회 성공
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseListUserInfoResponse"
components:
  schemas:
    CreateScheduleRequest:
      required:
      - contents
      - title
      type: object
      properties:
        title:
          maxLength: 100
          minLength: 2
          type: string
        contents:
          maxLength: 1000
          minLength: 5
          type: string
    ApiResponseScheduleResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/ScheduleResponse"
    ScheduleResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        writer:
          "$ref": "#/components/schemas/WriterResponse"
        title:
          type: string
        contents:
          type: string
        commentCount:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
    WriterResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    CreateCommentRequest:
      required:
      - contents
      type: object
      properties:
        contents:
          maxLength: 100
          minLength: 1
          type: string
    ApiResponseCommentResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/CommentResponse"
    CommentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        contents:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
        writer:
          "$ref": "#/components/schemas/WriterResponse"
        schedule:
          "$ref": "#/components/schemas/ScheduleResponse"
    SignUpRequest:
      required:
      - email
      - name
      - password
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 2
          type: string
        email:
          type: string
        password:
          maxLength: 20
          minLength: 8
          pattern: "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*()_+=\\-]).+$"
          type: string
    ApiResponseAuthInfoResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/AuthInfoResponse"
    AuthInfoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
    LoginRequest:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          maxLength: 20
          minLength: 8
          pattern: "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*()_+=\\-]).+$"
          type: string
    UpdateUserInfoRequest:
      required:
      - email
      - name
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 2
          type: string
        email:
          type: string
    ApiResponseUserInfoResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/UserInfoResponse"
    UserInfoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
    EditCommentRequest:
      required:
      - contents
      type: object
      properties:
        contents:
          maxLength: 100
          minLength: 1
          type: string
    EditScheduleTitleAndContentsRequest:
      required:
      - contents
      - title
      type: object
      properties:
        title:
          maxLength: 100
          minLength: 2
          type: string
        contents:
          maxLength: 1000
          minLength: 5
          type: string
    ApiResponseListUserInfoResponse:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/UserInfoResponse"
    ApiResponsePagingScheduleResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/PagingScheduleResponse"
    PagingScheduleResponse:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        schedules:
          type: array
          items:
            "$ref": "#/components/schemas/ScheduleResponse"
    ApiResponseCommentListResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/CommentListResponse"
    CommentListResponse:
      type: object
      properties:
        schedule:
          "$ref": "#/components/schemas/ScheduleResponse"
        comments:
          type: array
          items:
            "$ref": "#/components/schemas/CommentResponse"
    ApiResponseVoid:
      type: object
      properties:
        data:
          type: object
